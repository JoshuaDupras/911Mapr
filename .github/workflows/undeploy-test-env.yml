name: Undeploy-Test-Env

concurrency: test

# Controls when the workflow will run
on:
  # TODO: make run after dev/test tests finish, plus some time passes
#  push:
#    branches:
#      - dev
#    paths-ignore:
#      - 'README.md'
#      - '.github/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Allows this workflow to be run from another workflow
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: True
      AWS_SECRET_ACCESS_KEY:
        required: True
      REDIS_PASSWORD:
        required: True

jobs:
  delete_test_env:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: 'us-east-2'
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
    steps:
      - name: Checkout Latest Repo
        uses: actions/checkout@master

      - name: Install copilot
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          # download copilot
          curl -Lo copilot-linux https://github.com/aws/copilot-cli/releases/download/v1.15.0/copilot-linux && \
          # make copilot bin executable
          chmod +x copilot-linux && \
          # move to path
          mv copilot-linux $GITHUB_WORKSPACE/bin/copilot && \
          # add to PATH
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Configure AWS profile
        run: aws configure set region us-east-2 --profile default

      - name: Set test-env count to 0
        run: |
          sed -i "s/count:\t\d/count: 0/" ./copilot/web-app/manifest.yml
          sed -i "s/count:\t\d/count: 0/" ./copilot/web-app/manifest.yml
          sed -i "s/count:\t\d/count: 0/" ./copilot/web-app/manifest.yml
        shell: bash

      - name: un-deploy redis container
        run: copilot deploy --app incidentmapr --env test --name redis

      - name: un-deploy rss_scraper container
        run: copilot deploy --app incidentmapr --env test --name rss-scraper

      - name: un-deploy web_app container
        run: copilot deploy --app incidentmapr --env test --name web-app

      - name: copilot show services
        run: copilot svc ls

      - name: copilot show web-app service
        run: copilot svc show --name web-app
